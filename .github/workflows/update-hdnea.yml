name: Update Slivcdn Playlist

on:
  schedule:
    - cron: '0 */3 * * *' # Runs every 3 hours (e.g., 0:00, 3:00, 6:00, 9:00, etc. UTC)
  workflow_dispatch: # Allows manual triggering

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Fetch hdnea cookie and update Slivcdn.json
      - name: Fetch hdnea Cookie and Update Slivcdn.json
        run: |
          python - <<EOF
          import requests
          import json
          import re

          # API URL
          api_url = "https://apiv4.sonyliv.com/AGL/4.7/R/ENG/MWEB/IN/BR/CONTENT/VIDEOURL/VOD/1090492435/freepreview"

          # Headers to mimic browser
          headers = {
              'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
          }

          # Fetch response with cookies
          session = requests.Session()
          response = session.get(api_url, headers=headers)
          response.raise_for_status()  # Raise error for bad status codes

          # Parse JSON response
          data = response.json()

          # Extract videoURL
          video_url = data.get('resultObj', {}).get('videoURL', '')
          if not video_url:
              raise ValueError("No videoURL found in the API response")

          # Extract hdnea cookie from videoURL
          hdnea_match = re.search(r'hdnea=([^&]+)', video_url)
          if not hdnea_match:
              raise ValueError("No hdnea cookie found in videoURL")
          hdnea_cookie = hdnea_match.group(1)

          # Load existing playlist
          playlist_file = 'Slivcdn.json'
          try:
              with open(playlist_file, 'r') as f:
                  playlist = json.load(f)
          except (FileNotFoundError, json.JSONDecodeError):
              # Initialize with default structure if file doesn't exist
              playlist = {
                  "logo": "https://origin-staticv2.sonyliv.com/videoasset_images/sethd_23oct_landscape_thumb_rev.jpg",
                  "name": "Sony SET HD",
                  "link": "https://dishmt.slivcdn.com/hls/live/2011671/SETHD/master.m3u8"
              }

          # Update only the hdnea cookie in the existing link
          current_link = playlist.get('link', '')
          base_url = "https://dishmt.slivcdn.com/hls/live/2011671/SETHD/master.m3u8"
          if 'hdnea=' in current_link:
              # Replace existing hdnea cookie
              new_link = re.sub(r'hdnea=[^&]+', f'hdnea={hdnea_cookie}', current_link)
          else:
              # Append hdnea cookie to the base URL
              new_link = f"{base_url}?hdnea={hdnea_cookie}"

          # Update playlist with new link
          playlist['link'] = new_link

          # Write updated playlist back to file
          with open(playlist_file, 'w') as f:
              json.dump(playlist, f, indent=2)
          print(f"Updated Slivcdn.json with new hdnea cookie: {hdnea_cookie}")

          EOF

      # Commit and push changes
      - name: Commit Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add Slivcdn.json
          git commit -m "Update Slivcdn.json with new hdnea cookie" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
